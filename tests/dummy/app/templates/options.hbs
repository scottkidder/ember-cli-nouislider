{{ partial "navigation" }}

<div class="content">
  <h1>Options</h1>

  <section>
    <div class="double">
      <p>
        The range-slider component can be configured with a wide variety of options,
        which can be use to customize the slider in to doing exactly what you want.
        For options regarding the slider range, see
        <a href="/nouislider/slider-values/"> slider values</a>.
      </p>
      <p>
        These options match near exactly to the
        <a href="http://refreshless.com/nouislider/slider-options">original options</a>
        of the noUiSlider plugin.
      </p>
      <p>
        Please make use of the Ember Inspector to see that values of the model
        object for this route, and what the values are that gets passed into
        each instance of the range-slider component that we render on this
        page.
      </p>
    </div>
  </section>

  <a href="#section-start" id="section-start" class="sect">&sect;</a><h2>Start</h2>
  <section>
    <div class="view">
      <p>The start option sets the number of handles and their start positions, relative to <code>range</code>.</p>
      <div class="example">
        {{range-slider start=model.defaultStart range=model.defaultRange}}
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><em>none</em></div>

        <strong>Accepted values</strong>
        <div><code>number</code>,<br>
          <code>array[number]</code>,<br>
          <code>array[number, number]</code>
        </div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.defaultStart
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-Connect" id="section-Connect" class="sect">&sect;</a><h2>Connect</h2>
  <section>
    <div class="view">
      <p>The connect setting can be used to control the bar between the handles, or the edges of the slider. Use <code>"lower"</code> to connect to the lower side, or <code>"upper"</code> to connect to the upper side. Setting <code>true</code> sets the bar between the handles.</p>

      <div class="example">
        {{range-slider start=40 connect="lower" range=model.defaultRange}}
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><code>false</code></div>

        <strong>Accepted values</strong>
        <div><code>"lower"</code>, <code>"upper"</code>, <code>true</code>, <code>false</code></div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=40
               connect="lower"
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>


  <a href="#section-margin" id="section-margin" class="sect">&sect;</a><h2>Margin</h2>
  <section>
    <div class="view">
      <p>When using two handles, the minimum distance between the handles can be set using the margin option. The margin value is relative to the value set in 'range'. This option is only available on standard linear sliders.</p>

      <div class="example">
        {{range-slider start=model.margins margin=30 range=model.defaultRange on-change="marginChanged"}}
        <span class="example-val">{{marginMin}}</span>
        <span class="example-val">{{marginMax}}</span>
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><em>none</em></div>

        <strong>Accepted values</strong>
        <div><code>number</code>
        </div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.margins
               margin=30
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-limit" id="section-limit" class="sect">&sect;</a><h2>Limit</h2>
  <section>
    <div class="view">
      <p>The limit option is the oposite of the margin option, limiting the maximum distance between two handles. As with the margin option, the limit option can only be used on linear sliders.</p>
      <div class="example">
        {{range-slider start=model.limits limit=40 behaviour="drag" connect=true range=model.defaultRange on-change="limitsChanged"}}
        <div id="slider-limit"></div>
        <span class="example-val">{{limitMin}}</span>
        <span class="example-val">{{limitMax}}</span>
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><em>none</em></div>

        <strong>Accepted values</strong>
        <div><code>number</code>
        </div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.limits
               limit=40
               behaviour="drag"
               connect=true
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-padding" id="section-padding" class="sect">&sect;</a><h2>Padding</h2>
  <section>
    <div class="view">
      <p>Padding limits how close to the slider edges handles can be.</p>
      <div class="example">
        {{range-slider start=model.padding padding=10 range=model.defaultRange on-change="paddingChanged"}}
        <div id="slider-padding"></div>
        <span class="example-val">{{paddingMin}}</span>
        <span class="example-val">{{paddingMax}}</span>
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><em>none</em></div>

        <strong>Accepted values</strong>
        <div><code>number</code>,<br>
          <code>array[number]</code>,<br>
          <code>array[number, number]</code>
        </div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.padding
               padding=10
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-step" id="section-step" class="sect">&sect;</a><h2>Step</h2>
  <section>
    <div class="view">
      <p>By default, the slider slides fluently. In order to make the handles jump between intervals, you can use this option. The step option is relative to the values provided to <code>range</code>.</p>

      <div class="example">
        {{range-slider range=model.defaultRange step=10 start=model.steps}}
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><em>none</em></div>

        <strong>Accepted values</strong>
        <div><code>number</code>
        </div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider range=model.defaultRange
               step=10
               start=model.steps}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-disabled" id="section-disabled" class="sect">&sect;</a><h2>Disable</h2>
  <section>
    <div class="view">

      <p>Set the disable option to <code>true</code> to disable the slider.</p>

      <div class="example" style="margin: 0; padding-bottom: 20px">
        {{range-slider start=model.defaultStart disabled=model.disabled range=model.defaultRange}}
        <button {{action "disableSlider"}}>
          {{#if model.disabled}}
          Enable sliders
          {{else}}
          Disable sliders
          {{/if}}
        </button>
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><code>false</code></div>

        <strong>Accepted values</strong>
        <div><code>true</code>, <code>false</code></div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.defaultStart
               disabled=model.disabled
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-orientation" id="section-orientation" class="sect">&sect;</a><h2>Orientation</h2>
  <section>
    <div class="view">
      <p>The orientation setting can be used to set the slider to <code>"vertical"</code> or <code>"horizontal"</code>.</p>
      <p><strong>Set dimensions!</strong> Vertical sliders don't assume a default <code>height</code>, so you'll need to set one. You can use any unit you want, including <code>%</code> or <code>px</code>.</p>

      <div class="example vertical">
        {{range-slider start=40 orientation="vertical" range=model.defaultRange}}
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><code>"horizontal"</code></div>

        <strong>Accepted values</strong>
        <div><code>"vertical"</code>, <code>"horizontal"</code></div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=40
               orientation="vertical"
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-direction" id="section-direction" class="sect">&sect;</a><h2>Direction</h2>
  <section>
    <div class="view">

      <p>By default the sliders are <em>top-to-bottom</em> and <em>left-to-right</em>, but you can change this using the direction option, which decides where the upper side of the slider is.</p>

      <div class="example">
        {{range-slider start=model.direction direction="rtl" range=model.defaultRange on-change="directionChanged"}}
        <span class="example-val">{{model.direction}}</span>
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><code>"ltr"</code></div>

        <strong>Accepted values</strong>
        <div><code>"ltr"</code>, <code>"rtl"</code></div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.direction
               direction="rtl"
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-animate" id="section-animate" class="sect">&sect;</a><h2>Animate</h2>
  <section>
    <div class="view">

      <p>Set the animate option to <code>false</code> to prevent the slider from animating to a new value with when calling <code>.get()</code>.</p>

      <div class="example" style="margin: 0; padding-bottom: 20px">
        {{range-slider start=model.animate animate=true range=model.defaultRange}}
        <button {{action "animateValues"}}>Set sliders</button>
      </div>

      <div class="example" style="margin: 0;">
        {{range-slider start=model.animate animate=false range=model.defaultRange}}
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><code>true</code></div>

        <strong>Accepted values</strong>
        <div><code>true</code>, <code>false</code></div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.animate
               animate=true
               range=model.defaultRange}}

\{{range-slider start=model.animate
               animate=false
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>

  <a href="#section-tooltips" id="section-tooltips" class="sect">&sect;</a><h2>Tooltips</h2>
  <section>
    <div class="view">

        <p>noUiSlider can provide a basic tooltip without using its events system. Set the tooltips option to <code>true</code> to enable. This option can also accept formatting options to format the tooltips content. In that case, pass an <code>array</code> with a formatter for each handle, <code>true</code> to use the default or <code>false</code> to display no tooltip.</p>

      <div class="example tooltips" style="">
        {{range-slider start=model.defaultStart tooltips=true range=model.defaultRange}}
      </div>

      <div class="example tooltips" style="">
        {{range-slider start=model.defaultStart tooltips=model.tooltips range=model.defaultRange}}
      </div>

      <div class="options">
        <strong>Default</strong>
        <div><code>false</code></div>

        <strong>Accepted values</strong>
        <div><code>true</code>, <code>false</code>, <code>formatter</code></div>
        <div><code>array[formatter or false]</code></div>
      </div>
    </div>

    <div class="side">
      {{#source-code language="handlebars"}}
\{{range-slider start=model.defaultStart
               tooltips=true
               range=model.defaultRange}}

\{{range-slider start=model.defaultStart
               tooltips=model.tooltips
               range=model.defaultRange}}
      {{/source-code}}
    </div>
  </section>
</div>
